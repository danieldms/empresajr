function Migrator(e,t){this.db=t,this.dbname=e.adapter.db_name,this.table=e.adapter.collection_name,this.idAttribute=e.adapter.idAttribute,this.column=function(e){var t=e.split(/\s+/),o=t[0];switch(o.toLowerCase()){case"string":case"varchar":case"date":case"datetime":Ti.API.warn('"'+o+'" is not a valid sqlite field, using TEXT instead');case"text":o="TEXT";break;case"int":case"tinyint":case"smallint":case"bigint":case"boolean":Ti.API.warn('"'+o+'" is not a valid sqlite field, using INTEGER instead');case"integer":o="INTEGER";break;case"double":case"float":case"decimal":case"number":Ti.API.warn('"'+e+'" is not a valid sqlite field, using REAL instead');case"real":o="REAL";break;case"blob":o="BLOB";break;case"null":o="NULL";break;default:o="TEXT"}return t[0]=o,t.join(" ")},this.createTable=function(e){var t=[],o=!1;for(var i in e.columns)i===this.idAttribute&&(o=!0),t.push(i+" "+this.column(e.columns[i]));o||this.idAttribute!==ALLOY_ID_DEFAULT||t.push(ALLOY_ID_DEFAULT+" TEXT UNIQUE");var l="CREATE TABLE IF NOT EXISTS "+this.table+" ( "+t.join(",")+")";this.db.execute(l)},this.dropTable=function(){this.db.execute("DROP TABLE IF EXISTS "+this.table)},this.insertRow=function(e){var t=[],o=[],i=[],l=!1;for(var a in e)a===this.idAttribute&&(l=!0),t.push(a),o.push(e[a]),i.push("?");l||this.idAttribute!==ALLOY_ID_DEFAULT||(t.push(this.idAttribute),o.push(util.guid()),i.push("?")),this.db.execute("INSERT INTO "+this.table+" ("+t.join(",")+") VALUES ("+i.join(",")+");",o)},this.deleteRow=function(e){var t="DELETE FROM "+this.table,o=_.keys(e),i=o.length,l=[],a=[];i&&(t+=" WHERE ");for(var r=0;i>r;r++)l.push(o[r]+" = ?"),a.push(e[o[r]]);t+=l.join(" AND "),this.db.execute(t,a)}}function Sync(e,t,o){var i,l=t.config.adapter.collection_name,a=t.config.columns,r=t.config.adapter.db_name||ALLOY_DB_DEFAULT,s=null;switch(e){case"create":case"update":s=function(){var e={};t.id||(t.id=t.idAttribute===ALLOY_ID_DEFAULT?util.guid():null,e[t.idAttribute]=t.id,t.set(e,{silent:!0}));var o=[],s=[],n=[];for(var _ in a)o.push(_),s.push(t.get(_)),n.push("?");var d="REPLACE INTO "+l+" ("+o.join(",")+") VALUES ("+n.join(",")+");";if(i=Ti.Database.open(r),i.execute("BEGIN;"),i.execute(d,s),null===t.id){var c="SELECT last_insert_rowid();",y=i.execute(c);y&&y.isValidRow()?(t.id=y.field(0),e[t.idAttribute]=t.id,t.set(e,{silent:!0})):Ti.API.warn("Unable to get ID from database for model: "+t.toJSON()),y&&y.close()}return i.execute("COMMIT;"),i.close(),t.toJSON()}();break;case"read":var n=o.query||"SELECT * FROM "+l;i=Ti.Database.open(r);var d;d=_.isString(n)?i.execute(n):i.execute(n.statement,n.params);for(var c=0,y=[];d.isValidRow();){var h={},f=0;f=_.isFunction(d.fieldCount)?d.fieldCount():d.fieldCount,_.times(f,function(e){var t=d.fieldName(e);h[t]=d.fieldByName(t)}),y.push(h),c++,d.next()}d.close(),i.close(),t.length=c,s=1===c?y[0]:y;break;case"delete":var n="DELETE FROM "+l+" WHERE "+t.idAttribute+"=?";i=Ti.Database.open(r),i.execute(n,t.id),i.close(),t.id=null,s=t.toJSON()}s?(_.isFunction(o.success)&&o.success(s),"read"===e&&t.trigger("fetch")):_.isFunction(o.error)&&o.error(s)}function GetMigrationFor(e,t){var o=null,i=Ti.Database.open(e);i.execute("CREATE TABLE IF NOT EXISTS migrations (latest TEXT, model TEXT);");var l=i.execute("SELECT latest FROM migrations where model = ?;",t);if(l.isValidRow())var o=l.field(0)+"";return l.close(),i.close(),o}function Migrate(e){var t=e.migrations||[],o={};t.length&&t[t.length-1](o);var i=e.prototype.config;i.adapter.db_name||(i.adapter.db_name=ALLOY_DB_DEFAULT);var l=new Migrator(i),a=i.adapter.migration===void 0||null===i.adapter.migration?o.id:i.adapter.migration;if(a===void 0||null===a){var r=Ti.Database.open(i.adapter.db_name);return l.db=r,l.createTable(i),r.close(),void 0}a+="";var s,n=GetMigrationFor(i.adapter.db_name,i.adapter.collection_name);if(n!==a){if(n&&n>a?(s=0,t.reverse()):s=1,db=Ti.Database.open(i.adapter.db_name),l.db=db,db.execute("BEGIN;"),t.length)for(var d=0;t.length>d;d++){var c=t[d],y={};if(c(y),s){if(y.id>a)break;if(n>=y.id)continue}else{if(a>=y.id)break;if(y.id>n)continue}var h=s?"up":"down";_.isFunction(y[h])&&y[h](l)}else l.createTable(i);db.execute("DELETE FROM migrations where model = ?",i.adapter.collection_name),db.execute("INSERT INTO migrations VALUES (?,?)",a,i.adapter.collection_name),db.execute("COMMIT;"),db.close(),l.db=null}}function installDatabase(e){var t=e.adapter.db_file,o=e.adapter.collection_name,i=/(^|.*\/)([^\/]+)\.[^\/]+$/,l=t.match(i);if(null===l)throw'Invalid sql database filename "'+t+'"';e.adapter.db_name=e.adapter.db_name||l[2];var a=e.adapter.db_name;Ti.API.debug('Installing sql database "'+t+'" with name "'+a+'"');for(var r=Ti.Database.install(t,a),s=r.execute('pragma table_info("'+o+'");'),n={};s.isValidRow();){var d=s.fieldByName("name"),c=s.fieldByName("type");n[d]=c,d!==ALLOY_ID_DEFAULT||e.adapter.idAttribute||(e.adapter.idAttribute=ALLOY_ID_DEFAULT),s.next()}if(e.columns=n,s.close(),e.adapter.idAttribute){if(!_.contains(_.keys(e.columns),e.adapter.idAttribute))throw'config.adapter.idAttribute "'+e.adapter.idAttribute+'" not found in list of columns for table "'+o+'"\n'+"columns: ["+_.keys(e.columns).join(",")+"]"}else{Ti.API.info('No config.adapter.idAttribute specified for table "'+o+'"'),Ti.API.info('Adding "'+ALLOY_ID_DEFAULT+'" to uniquely identify rows');var y=[],h=[];_.each(e.columns,function(e,t){h.push(t),y.push(t+" "+e)});var f=h.join(",");r.execute("ALTER TABLE "+o+" RENAME TO "+o+"_temp;"),r.execute("CREATE TABLE "+o+"("+y.join(",")+","+ALLOY_ID_DEFAULT+" TEXT UNIQUE);"),r.execute("INSERT INTO "+o+"("+f+","+ALLOY_ID_DEFAULT+") SELECT "+f+",CAST(_ROWID_ AS TEXT) FROM "+o+"_temp;"),r.execute("DROP TABLE "+o+"_temp;"),e.columns[ALLOY_ID_DEFAULT]="TEXT UNIQUE",e.adapter.idAttribute=ALLOY_ID_DEFAULT}r.close()}var _=require("alloy/underscore")._,util=require("alloy/sync/util"),ALLOY_DB_DEFAULT="_alloy_",ALLOY_ID_DEFAULT="alloy_id",cache={config:{},Model:{}};module.exports.beforeModelCreate=function(e,t){if(cache.config[t])return cache.config[t];throw"No support for Titanium.Database in MobileWeb environment."},module.exports.afterModelCreate=function(e,t){return cache.Model[t]?cache.Model[t]:(e||(e={}),e.prototype.idAttribute=e.prototype.config.adapter.idAttribute,Migrate(e),cache.Model[t]=e,e)},module.exports.sync=Sync;